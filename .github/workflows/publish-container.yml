name: build

on:
  push:
    branches:
      - master

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'ci-skip')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Ivy Cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{runner.os}}-sbt-${{hashFiles('**/build.sbt')}}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{runner.os}}-sbt-${{hashFiles('**/build.sbt')}}
      - name: Coursier cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier
          key: ${{ runner.os }}-coursier-cache-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.os }}-coursier-cache-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-
            ${{ runner.os }}-coursier-cache-${{ matrix.scala }}-
            ${{ runner.os }}-coursier-cache-
      - name: Initialize sbt
        run: sbt clean
      - name: Build
        run: sbt compile
      - name: Unit tests
        run: sbt test

  major:
    if: "!contains(github.event.head_commit.message, 'ci-skip') && contains(github.event.head_commit.message, '#major')"
    name: Build major and publish Docker container
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login on docker registry
        run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u ldsoftware --password-stdin
      - name: Setup git username
        run: git config user.name LukeDS-it
      - name: Setup git email
        run: git config user.email ${{secrets.EMAIL}}
      - name: Release
        run: sbt "release skip-tests with-defaults"
        env:
          DOCKER_USERNAME: ldsoftware

  minor:
    if: "!contains(github.event.head_commit.message, 'ci-skip') && contains(github.event.head_commit.message, '#minor')"
    name: Build minor and publish Docker container
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login on docker registry
        run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u ldsoftware --password-stdin
      - name: Setup git username
        run: git config user.name LukeDS-it
      - name: Setup git email
        run: git config user.email ${{secrets.EMAIL}}
      - name: Release
        run: sbt "release skip-tests with-defaults"
        env:
          DOCKER_USERNAME: ldsoftware

  patch:
    if: | 
      !contains(github.event.head_commit.message, 'ci-skip')
      && !contains(github.event.head_commit.message, '#major')
      && !contains(github.event.head_commit.message, '#minor')
    name: Build patch and publish Docker container
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login on docker registry
        run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u ldsoftware --password-stdin
      - name: Setup git username
        run: git config user.name LukeDS-it
      - name: Setup git email
        run: git config user.email ${{secrets.EMAIL}}
      - name: Release
        run: sbt "release skip-tests with-defaults"
        env:
          DOCKER_USERNAME: ldsoftware

  deploy:
    name: Deploy on production environment
    needs: [major, minor, patch]
    if: |
      always()
      && !contains(github.event.head_commit.message, 'ci-skip')
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest
    environment: manual-actions
    steps:
      - name: Placeholder
        run: echo "Done"

  skip:
    if: "contains(github.event.head_commit.message, 'ci-skip')"
    name: Skip CI requested
    runs-on: ubuntu-latest
    steps:
      - name: Complete workflow
        run: echo "CI Skipped, everything is up to date"
